@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin absolutePosition($direction: "center", $position: absolute) {
  position: $position;
  @if $direction == "center" {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
  @if $direction == "horizontal" {
    left: 50%;
    transform: translateX(-50%);
  }
  @if $direction == "vertical" {
    top: 50%;
    transform: translateY(-50%);
  }
}

@mixin absoluteFull() {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
}

@mixin maxWidth($breakpoint) {
  @media screen and (max-width: $breakpoint) {
    @content;
  }
}

@mixin minWidth($breakpoint) {
  @media screen and (min-width: $breakpoint) {
    @content;
  }
}

//hidde scrollbar
@mixin hiddeScrollBar() {
  -ms-overflow-style: none;
  scrollbar-width: none;
  &::-webkit-scrollbar {
    display: none;
  }
}

// text clamp
@mixin textClamp($row: 1, $size: 100%) {
  display: -webkit-box;
  -webkit-line-clamp: $row;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  width: $size;
  max-width: $size;
  white-space: pre-wrap;
  word-break: break-word;
}

@mixin flexBox(
  $align-items: stretch,
  $justify-content: flex-start,
  $direction: row,
  $wrap: nowrap
) {
  display: flex;
  align-items: $align-items;
  justify-content: $justify-content;
  flex-direction: $direction;
  flex-wrap: $wrap;
}

@mixin hoverEffect($itemClass, $itemContent, $isTransition: "true") {
  #{$itemClass} {
    // cursor: pointer;
    position: relative;
    transition: all 0.25s linear;
    z-index: 1;
    @if $isTransition == "true" {
      &::after {
        content: "";
        @include absoluteFull();
        background-color: $third-color;
        z-index: -1;
        transition: all 0.25s linear;
      }
    }
    &:hover {
      #{$itemContent} {
        opacity: 1;
        visibility: visible;
      }
      @if $isTransition == "true" {
        transform: translate(-1rem, -1rem);
        &::after {
          transform: translate(1rem, 1rem);
        }
      }
    }
  }
  #{$itemContent} {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    text-align: center;
    @include absoluteFull();
    background: linear-gradient(
      to bottom,
      rgba($primary-color, 0.8),
      rgba($secondary-color, 0.8)
    );
    z-index: 2;
    opacity: 0;
    visibility: hidden;
    transition: all 0.25s linear;
  }
}

@mixin touchSlider($widthColumn: 85%, $gap: 2rem, $padding: 1rem) {
  display: grid;
  grid-template-columns: unset;
  grid-auto-columns: $widthColumn;
  grid-auto-flow: column;
  grid-column-gap: $gap;
  overflow-x: auto;
  padding: $padding;
  scroll-snap-type: x mandatory;
  scroll-snap-stop: always;
  @include hiddeScrollBar();
  & > * {
    scroll-snap-align: center;
  }
}
